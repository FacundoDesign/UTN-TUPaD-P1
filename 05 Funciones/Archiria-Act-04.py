# EJERCICIO 4: Funciones para calcular √°rea y per√≠metro de un c√≠rculo


# Importamos la biblioteca math para usar el valor de PI
import math

def calcular_area_circulo(radio):
    """
    Funci√≥n que calcula el √°rea de un c√≠rculo dado su radio.
    
    F√≥rmula: √Årea = œÄ √ó radio¬≤
    
    Par√°metros:
        radio (float): Radio del c√≠rculo en unidades de longitud
    
    Retorna:
        float: √Årea del c√≠rculo en unidades cuadradas
    """
    # Aplicamos la f√≥rmula del √°rea: œÄ √ó radio¬≤
    # math.pi nos da el valor de œÄ (3.14159...)
    # radio ** 2 significa radio elevado al cuadrado (radio √ó radio)
    area = math.pi * radio ** 2
    
    # Devolvemos el resultado calculado
    return area

def calcular_perimetro_circulo(radio):
    """
    Funci√≥n que calcula el per√≠metro (circunferencia) de un c√≠rculo dado su radio.
    
    F√≥rmula: Per√≠metro = 2 √ó œÄ √ó radio
    
    Par√°metros:
        radio (float): Radio del c√≠rculo en unidades de longitud
    
    Retorna:
        float: Per√≠metro del c√≠rculo en unidades de longitud
    """
    # Aplicamos la f√≥rmula del per√≠metro: 2 √ó œÄ √ó radio
    # Multiplicamos 2 por pi por el radio
    perimetro = 2 * math.pi * radio
    
    # Devolvemos el resultado calculado
    return perimetro

# ====================================================================
# PROGRAMA PRINCIPAL
# ====================================================================

def main():
    """Funci√≥n principal que ejecuta el programa."""
    
    # Mostramos el t√≠tulo del ejercicio
    print("="*60)
    print("EJERCICIO 4: C√°lculos de C√≠rculo (√Årea y Per√≠metro)")
    print("="*60)
    
    # Explicamos qu√© hace el programa
    print("Este programa calcula el √°rea y per√≠metro de un c√≠rculo.")
    print("Solo necesitas proporcionar el radio del c√≠rculo.\n")
    
    # Mostramos las f√≥rmulas que vamos a usar
    print(" F√≥rmulas utilizadas:")
    print("   ‚Ä¢ √Årea = œÄ √ó radio¬≤")
    print("   ‚Ä¢ Per√≠metro = 2 √ó œÄ √ó radio")
    print(f"   ‚Ä¢ Valor de œÄ = {math.pi:.6f}")
    print()
    
    # Solicitamos el radio al usuario
    print("Por favor, ingresa el radio del c√≠rculo:")
    
    try:
        # Convertimos el input a n√∫mero decimal (float)
        radio_usuario = float(input("Radio: "))
        
        # Verificamos que el radio sea un valor positivo
        if radio_usuario <= 0:
            print("  El radio debe ser un n√∫mero positivo.")
            print("Usando radio = 5 como ejemplo...")
            radio_usuario = 5
        
        # Mostramos los datos ingresados
        print(f"\n DATOS INGRESADOS:")
        print(f"   Radio del c√≠rculo: {radio_usuario}")
        
        # Llamamos a la primera funci√≥n para calcular el √°rea
        area_resultado = calcular_area_circulo(radio_usuario)
        
        # Llamamos a la segunda funci√≥n para calcular el per√≠metro
        perimetro_resultado = calcular_perimetro_circulo(radio_usuario)
        
        # Mostramos los resultados de ambas funciones
        print(f"\n RESULTADOS CALCULADOS:")
        print(f"   √Årea del c√≠rculo: {area_resultado:.2f} unidades¬≤")
        print(f"   Per√≠metro del c√≠rculo: {perimetro_resultado:.2f} unidades")
        
        # Mostramos c√≥mo se realizaron los c√°lculos paso a paso
        print(f"\nüîç DETALLE DE LOS C√ÅLCULOS:")
        print(f"   √Årea = œÄ √ó {radio_usuario}¬≤ = {math.pi:.3f} √ó {radio_usuario**2} = {area_resultado:.2f}")
        print(f"   Per√≠metro = 2 √ó œÄ √ó {radio_usuario} = 2 √ó {math.pi:.3f} √ó {radio_usuario} = {perimetro_resultado:.2f}")
        
    except ValueError:
        # Si el usuario no ingresa un n√∫mero v√°lido
        print(" Error: No ingresaste un n√∫mero v√°lido.")
        print("Vamos a usar un ejemplo con radio = 10")
        
        # Ejecutamos el ejemplo con radio = 10
        radio_ejemplo = 10
        area_ejemplo = calcular_area_circulo(radio_ejemplo)
        perimetro_ejemplo = calcular_perimetro_circulo(radio_ejemplo)
        
        print(f"\nüìä EJEMPLO CON RADIO = {radio_ejemplo}:")
        print(f"   √Årea: {area_ejemplo:.2f} unidades¬≤")
        print(f"   Per√≠metro: {perimetro_ejemplo:.2f} unidades")
    
    # Ejemplos adicionales con diferentes valores
    print("\n" + "="*40)
    print("EJEMPLOS ADICIONALES:")
    print("="*40)
    
    # Lista de radios para mostrar ejemplos
    radios_ejemplo = [1, 2.5, 7, 15]
    
    # Mostramos la tabla de resultados
    print(f"{'Radio':<8} {'√Årea':<12} {'Per√≠metro':<12}")
    print("-" * 32)
    
    for radio in radios_ejemplo:
        area = calcular_area_circulo(radio)
        perimetro = calcular_perimetro_circulo(radio)
        print(f"{radio:<8} {area:<12.2f} {perimetro:<12.2f}")

# Ejecutamos el programa principal
if __name__ == "__main__":
    main()


# Detalle del codigo:
# Importamos 'math' para usar math.pi (valor de œÄ)
# Creamos DOS funciones separadas: una para √°rea y otra para per√≠metro
# Ambas funciones reciben el mismo par√°metro (radio) pero hacen c√°lculos diferentes
# Las funciones DEVUELVEN los resultados calculados (no los imprimen)
# En el programa principal llamamos a AMBAS funciones con el mismo valor
# Guardamos los resultados en variables separadas y los mostramos
# Usamos float() para permitir n√∫meros decimales en el radio
# Usamos :.2f para mostrar solo 2 decimales en los resultados
# Incluimos validaci√≥n para asegurar que el radio sea positivo
