# EJERCICIO 8: Funci√≥n para calcular el √çndice de Masa Corporal (IMC)


def calcular_imc(peso, altura):
    """
    Funci√≥n que calcula el √çndice de Masa Corporal (IMC).
    
    F√≥rmula: IMC = peso (kg) √∑ altura¬≤ (m¬≤)
    
    Par√°metros:
        peso (float): Peso de la persona en kilogramos
        altura (float): Altura de la persona en metros
    
    Retorna:
        float: Valor del IMC calculado
    """
    # Aplicamos la f√≥rmula del IMC
    # IMC = peso dividido por altura al cuadrado
    imc = peso / (altura ** 2)
    
    # Devolvemos el resultado calculado
    return imc

def interpretar_imc(imc):
    """
    Funci√≥n adicional que interpreta el valor del IMC seg√∫n los rangos est√°ndar.
    
    Par√°metros:
        imc (float): Valor del IMC calculado
    
    Retorna:
        str: Interpretaci√≥n del IMC seg√∫n rangos m√©dicos
    """
    # Clasificamos el IMC seg√∫n los rangos est√°ndar de la OMS
    if imc < 18.5:
        return "Bajo peso"
    elif 18.5 <= imc < 25:
        return "Peso normal"
    elif 25 <= imc < 30:
        return "Sobrepeso"
    else:  # imc >= 30
        return "Obesidad"

# ====================================================================
# PROGRAMA PRINCIPAL
# ====================================================================

def main():
    """Funci√≥n principal que ejecuta el programa."""
    
    # Mostramos el t√≠tulo del ejercicio
    print("="*55)
    print("EJERCICIO 8: Calculadora de IMC")
    print("="*55)
    
    # Explicamos qu√© es el IMC y c√≥mo se calcula
    print(" El IMC (√çndice de Masa Corporal) es una medida que relaciona")
    print("   el peso y la altura para evaluar si una persona tiene un")
    print("   peso saludable.")
    print()
    print(" F√≥rmula: IMC = Peso (kg) √∑ Altura¬≤ (m¬≤)")
    print()
    print(" Clasificaci√≥n seg√∫n la OMS:")
    print("   ‚Ä¢ Bajo peso:     IMC < 18.5")
    print("   ‚Ä¢ Peso normal:   18.5 ‚â§ IMC < 25")
    print("   ‚Ä¢ Sobrepeso:     25 ‚â§ IMC < 30")
    print("   ‚Ä¢ Obesidad:      IMC ‚â• 30")
    print()
    
    # Solicitamos los datos al usuario
    print("Por favor, ingresa tus datos para calcular el IMC:")
    
    try:
        # Pedimos el peso en kilogramos
        print("Peso en kilogramos (ej: 70.5):")
        peso_usuario = float(input("‚Üí "))
        
        # Validamos que el peso sea positivo
        if peso_usuario <= 0:
            print("  El peso debe ser un n√∫mero positivo.")
            print("Usando 70 kg como ejemplo...")
            peso_usuario = 70
        
        # Pedimos la altura en metros
        print("Altura en metros (ej: 1.75):")
        altura_usuario = float(input("‚Üí "))
        
        # Validamos que la altura sea positiva y realista
        if altura_usuario <= 0 or altura_usuario > 3:
            print("  La altura debe ser un n√∫mero positivo menor a 3 metros.")
            print("Usando 1.70 m como ejemplo...")
            altura_usuario = 1.70
        
        # Mostramos los datos ingresados
        print(f"\n DATOS INGRESADOS:")
        print(f"   Peso: {peso_usuario} kg")
        print(f"   Altura: {altura_usuario} m")
        
        # Llamamos a la funci√≥n para calcular el IMC
        imc_resultado = calcular_imc(peso_usuario, altura_usuario)
        
        # Mostramos el resultado con 2 decimales como solicita el ejercicio
        print(f"\n RESULTADO DEL C√ÅLCULO:")
        print(f"   Tu IMC es: {imc_resultado:.2f}")
        
        # Mostramos el c√°lculo paso a paso
        print(f"\nüîç DETALLE DEL C√ÅLCULO:")
        print(f"   IMC = {peso_usuario} √∑ ({altura_usuario})¬≤")
        print(f"   IMC = {peso_usuario} √∑ {altura_usuario ** 2:.4f}")
        print(f"   IMC = {imc_resultado:.2f}")
        
        # Usamos la funci√≥n adicional para interpretar el resultado
        interpretacion = interpretar_imc(imc_resultado)
        
        print(f"\n INTERPRETACI√ìN M√âDICA:")
        print(f"   Seg√∫n tu IMC de {imc_resultado:.2f}, tienes: {interpretacion}")
        
        # Mostramos recomendaciones b√°sicas seg√∫n el resultado
        print(f"\n INFORMACI√ìN ADICIONAL:")
        if imc_resultado < 18.5:
            print("   ‚Ä¢ Podr√≠as considerar consultar con un profesional de la salud")
            print("   ‚Ä¢ Una dieta equilibrada puede ayudarte a ganar peso saludablemente")
        elif 18.5 <= imc_resultado < 25:
            print("   ‚Ä¢ ¬°Felicitaciones! Tu peso est√° en el rango saludable")
            print("   ‚Ä¢ Mant√©n una dieta equilibrada y ejercicio regular")
        elif 25 <= imc_resultado < 30:
            print("   ‚Ä¢ Considera adoptar h√°bitos alimenticios m√°s saludables")
            print("   ‚Ä¢ El ejercicio regular puede ayudarte a mantener un peso saludable")
        else:
            print("   ‚Ä¢ Es recomendable consultar con un profesional de la salud")
            print("   ‚Ä¢ Un plan de alimentaci√≥n y ejercicio puede ser beneficioso")
        
    except ValueError:
        # Si el usuario no ingresa n√∫meros v√°lidos
        print(" Error: Debes ingresar n√∫meros v√°lidos.")
        print("Te mostraremos un ejemplo con peso 75 kg y altura 1.80 m:\n")
        
        # Ejecutamos la funci√≥n con datos de ejemplo
        peso_ejemplo = 75
        altura_ejemplo = 1.80
        imc_ejemplo = calcular_imc(peso_ejemplo, altura_ejemplo)
        interpretacion_ejemplo = interpretar_imc(imc_ejemplo)
        
        print(f" Ejemplo: Peso = {peso_ejemplo} kg, Altura = {altura_ejemplo} m")
        print(f" IMC = {imc_ejemplo:.2f}")
        print(f" Clasificaci√≥n: {interpretacion_ejemplo}")
    
    # Tabla de ejemplos con diferentes IMCs
    print("\n" + "="*60)
    print("TABLA DE EJEMPLOS CON DIFERENTES VALORES:")
    print("="*60)
    
    # Lista de ejemplos con diferentes pesos y alturas
    ejemplos = [
        (50, 1.60),   # Bajo peso
        (65, 1.70),   # Normal
        (80, 1.75),   # Sobrepeso
        (100, 1.70)   # Obesidad
    ]
    
    # Encabezado de la tabla
    print(f"{'Peso (kg)':<10} {'Altura (m)':<12} {'IMC':<8} {'Clasificaci√≥n':<15}")
    print("-" * 50)
    
    # Procesamos cada ejemplo
    for peso, altura in ejemplos:
        imc = calcular_imc(peso, altura)
        clasificacion = interpretar_imc(imc)
        print(f"{peso:<10} {altura:<12} {imc:<8.2f} {clasificacion:<15}")

# Funci√≥n adicional para calcular el peso ideal
def peso_ideal_rango(altura):
    """
    Funci√≥n que calcula el rango de peso ideal para una altura dada.
    
    Par√°metros:
        altura (float): Altura en metros
    
    Retorna:
        tuple: (peso_m√≠nimo, peso_m√°ximo) para IMC normal (18.5-24.9)
    """
    # Calculamos los pesos l√≠mite para IMC normal
    peso_min = 18.5 * (altura ** 2)  # IMC 18.5
    peso_max = 24.9 * (altura ** 2)  # IMC 24.9
    
    return (peso_min, peso_max)

# Ejecutamos el programa principal
if __name__ == "__main__":
    main()
    
    # Ejemplo de funci√≥n adicional
    print("\n" + "="*50)
    print("FUNCI√ìN EXTRA: RANGO DE PESO IDEAL")
    print("="*50)
    
    altura_ejemplo = 1.75
    peso_min, peso_max = peso_ideal_rango(altura_ejemplo)
    print(f"Para una altura de {altura_ejemplo} m:")
    print(f"Peso ideal: entre {peso_min:.1f} kg y {peso_max:.1f} kg")


# Detalle del Codigo:
# La funci√≥n 'calcular_imc' recibe peso (kg) y altura (m)
# Aplica la f√≥rmula: IMC = peso √∑ altura¬≤
# Usa ** 2 para elevar la altura al cuadrado
# DEVUELVE el resultado como n√∫mero decimal (float)
# Incluimos validaciones para valores positivos y realistas
# Mostramos el resultado con :.2f para 2 decimales como solicita
# Agregamos una funci√≥n extra para interpretar el IMC
# Usamos rangos con if/elif/else para clasificar el resultado
# Incluimos informaci√≥n m√©dica b√°sica y recomendaciones
# La funci√≥n adicional calcula rangos de peso saludable
